---
- name: Install systemd-unit
  template:
    src: "systemd-loki.j2"
    dest: "/etc/systemd/system/loki.service"
  register: unit_tpl
  notify:
    - reload systemd loki
  when: "__loki_go_os == 'linux'"

- name: Create config directories for loki
  file:
    mode: '0755'
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ loki_config_directory }}"
    - "{{ loki_config_store }}"

- name: Setup configuration
  template:
    src: "loki.yml.j2"
    dest: "/etc/loki/loki.yml"
    mode: '0644'
  register: conf_tpl
  notify:
    - restart systemd loki

# FIXME: check version
- name: check if local loki download exists
  stat:
    path: "/tmp/{{ __loki_archive }}"
  register: loki_exists

- block:
    - name: Download loki release
      become: false
      get_url:
        url: "{{ __loki_download }}"
        dest: "/tmp/{{ __loki_archive }}"
        checksum: "sha256:{{ __loki_download_github }}/{{ loki_version }}/SHA256SUMS"
      register: _download_release
      until: _download_release is succeeded
      retries: 5
      delay: 2
      delegate_to: localhost
      check_mode: false

    - name: Unpack loki release
      become: false
      unarchive:
        src: "/tmp/{{ __loki_archive }}"
        dest: "/tmp"
        creates: "/tmp/loki-{{ __loki_go_os }}-{{ __loki_go_arch }}"
      delegate_to: localhost
      check_mode: false
  when: not loki_exists.stat.exists

- name: Distribute loki to servers
  copy:
    src: "/tmp/loki-{{ __loki_go_os }}-{{ __loki_go_arch }}"
    dest: "/usr/local/bin/loki"
    mode: 0755
    owner: root
    group: root
  notify: restart systemd loki
  when: not ansible_check_mode
